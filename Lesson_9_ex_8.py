print("Lesson 9. Home task №5.")
"""
8. JSON и CSV.
Исходные данные:
https://drive.google.com/drive/folders/1KH3pJewo3QKl3mua2XnJDv9xN2LxusbE?usp=sharing

Пункты задания:
• 1+. Есть данные в формате JSON – взять с диска с исходными данными.
• 2+. Реализовать функцию, которая считает данные из исходного JSON-файла и преобразует их в формат CSV
• 3.+ Реализовать функцию, которая сохранит данные в CSV-файл 
    (данные должны сохраняться независимо от их количества – если добавить в исходный JSON-файл ещё одного сотрудника, работа программы не должна нарушаться).
• 4.+ Реализовать функцию, которая добавит информацию о новом сотруднике в JSON-файл. Пошагово вводятся все необходимые данные о сотруднике, формируются данные для записи.
• 5.Такая же функция для добавления информации о новом сотруднике в CSV-файл.
• 6.Реализовать функцию, которая выведет информацию об одном сотруднике по имени. Имя для поиска вводится с клавиатуры.
• 7.Реализовать функцию фильтра по языку: с клавиатуры вводится язык программирования, выводится список всех сотрудников, кто владеет этим языком программирования.
• 8.Реализовать функцию фильтра по году: ввести с клавиатуры год рождения, вывести средний рост всех сотрудников, у которых год рождения меньше заданного.
• 9.Программа должна представлять собой интерактив – пользовательское меню с возможностью выбора определённого действия (действия – функции из предыдущих пунктов + выход из программы). 
 10.Пока пользователь не выберет выход из программы, должен предлагаться выбор следующего действия.
"""

import json
#Реализовать функцию, которая считает данные из исходного JSON-файла и преобразует их в формат CSV
#Реализовать функцию, которая сохранит данные в CSV-файл.

def func_1():
    with open("employees.json", 'r') as json_f, open("for_ex_8_CSV_for_func_1.csv", 'w') as csv_f:
        data = json.load(json_f)
        json.dump(data, csv_f, indent=4, ensure_ascii=False )
# func_1()


#Реализовать функцию, которая добавит информацию о новом сотруднике в JSON-файл.
#Пошагово вводятся все необходимые данные о сотруднике, формируются данные для записи.

def func_2():
    with open("employees.json", 'r+',encoding='utf-8') as json_f:
        data = json.load(json_f)

    #Просто смотрю
        print(data)


    #Счетчик до!
        count = 0
        for line in data:
            # print(line)
            count += 1
        print(f"До добавления в JSON-файле находится информация о {count} людях.")

    #Просто смотрю тип данных - это List -
        # print(type(data))
    #Произвожу ввод данных
        name_input = str(input("Введите свое имя: "))
        birthday_input = str(input("Введите свой день рождения: "))
        height_input = int(input("Введите свой рост: "))
        weight_input = float(input("Введите свой вес: "))
        car_input = bool(input("Есть ли у Вас машина (1-да, 0 - нет): "))
        languages_input_1 = input("Введите язык программирования #1 который вы знаете: ")
        languages_input_2 = input("Введите язык программирования #2 который вы знаете: ")
        languages_input_3 = input("Введите язык программирования #3 который вы знаете: ")
    #Создаю словарь с новыми данными
        dict = {'name': name_input, 'birthday': birthday_input, 'height': height_input, 'weight': weight_input, 'car': car_input, 'languages': [languages_input_1, languages_input_2, languages_input_3]}

    #Добавляю словарь с новыми данными в список
        data.append(dict)

    # print(data)

    #Очищу файл перед добавлением нового списка
    with open('employees.json', 'w', encoding='utf-8') as json_f:
        pass
    #Добавляю новый список
        json.dump(data, json_f, indent=4)


    # Счетчик после!
        count = 0
        for line in data:
            # print(line)
            count += 1
        print(f"После добавления в JSON-файле находится информация о {count} людях.")

func_2()

